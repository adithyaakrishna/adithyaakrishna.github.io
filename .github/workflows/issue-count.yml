name: "Issue Count"

on:
  issue_comment:
    types: [created]

jobs:
  countIssues:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install Octokit
        run: npm install @octokit/rest@18

      - name: Parse comment and count issues
        id: parse-comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.MY_ACCESS_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.MY_ACCESS_TOKEN });

            const comment = context.payload.comment.body.trim();
            const regex = /^\/issue-count @(\S+)/;
            const match = comment.match(regex);

            if (match) {
              const username = match[1];
              console.log(`Username extracted: ${username}`);

              const { data: issues } = await octokit.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignee: username,
                state: 'open'
              });

              const issueCount = issues.length;
              console.log(`Issue count for ${username}: ${issueCount}`);

              const issueCommentId = context.payload.comment.id;
              console.log(`Issue comment ID: ${issueCommentId}`);

              const issueCountMessage = `@${username} has ${issueCount} open issues assigned.`;

              // Store the issue count message in a file
              echo "${issueCountMessage}" > issue_count_message.txt

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            issue-number: ${{ github.event.issue.number }}
            body-path: issue_count_message.txt
