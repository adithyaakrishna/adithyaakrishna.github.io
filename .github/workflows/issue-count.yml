name: "Issue Count"

on:
  issue_comment:
    types: [created]

jobs:
  countIssues:
    runs-on: ubuntu-latest
    steps:
      - name: Parse comment
        id: parse-comment
        run: |
          comment=$(jq --raw-output .comment.body $GITHUB_EVENT_PATH)
          regex="^/issue-count @(\S+)"
          if [[ $comment =~ $regex ]]; then
            username="${BASH_REMATCH[1]}"
            echo "::set-output name=username::$username"
            issueCommentId=$(jq --raw-output .comment.id $GITHUB_EVENT_PATH)
            echo "::set-output name=issueCommentId::$issueCommentId"
          else
            echo "No valid username found in the comment"
          fi

      - name: Get issue count
        if: steps.parse-comment.outputs.username
        run: |
          username="${{ steps.parse-comment.outputs.username }}"
          issueCommentId="${{ steps.parse-comment.outputs.issueCommentId }}"
          echo "Retrieved username for issue count: $username"
          echo "Retrieved issueCommentId: $issueCommentId"
          const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignee: username,
              state: 'open'
            });
            const issueCount = issues.length;
            const issueCountMessage = `@${username} has ${issueCount} open issues assigned.`;
            await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: issueCountMessage,
                in_reply_to: parseInt(issueCommentId)
            });
