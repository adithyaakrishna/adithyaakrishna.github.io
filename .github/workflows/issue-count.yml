name: "Issue Count"

on:
  issue_comment:
    types: [created]

jobs:
  countIssues:
    runs-on: ubuntu-latest
    outputs:
      username: ${{ steps.parse-comment.outputs.username }}
      issueCommentId: ${{ steps.parse-comment.outputs.issueCommentId }}
    steps:
      - name: Parse comment
        id: parse-comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = context.payload.comment.body.trim();
            const regex = /^\/issue-count @(\S+)/;
            const match = comment.match(regex);
            const username = match[1];
            const issueCommentId = context.payload.comment.id;
            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignee: username,
              state: 'open'
            });
            
            const issueCount = issues.length;
            const issueCountMessage = `@${username} has ${issueCount} open issues assigned.`;
            
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: issueCountMessage,
              in_reply_to: parseInt(issueCommentId)
            });
