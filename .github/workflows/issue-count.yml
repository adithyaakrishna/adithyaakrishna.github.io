name: "Issue Count"

on:
  issue_comment:
    types: [created]

jobs:
  countIssues:
    runs-on: ubuntu-latest
    steps:
      - name: Parse comment
        id: parse-comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = context.payload.comment.body.trim();
            const regex = /^\/issue-count @(\S+)/;
            const match = comment.match(regex);
            if (match) {
              const username = match[1];
              console.log(`Username extracted: ${username}`);
              const issueCommentId = context.payload.comment.id;
              console.log(`Issue comment ID: ${issueCommentId}`);
              console.log(`::set-output name=username::${username}`);
              console.log(`::set-output name=issueCommentId::${issueCommentId}`);
            } else {
              console.log('No valid username found in the comment');
              process.exit(1); // Exit with error if no valid username found
            }

      - name: Get issue count
        if: ${{ steps.parse-comment.outputs.username != '' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = context.payload.outputs.username;
            const issueCommentId = context.payload.outputs.issueCommentId;
            console.log(`Retrieved username for issue count: ${username}`);
            console.log(`Retrieved issueCommentId: ${issueCommentId}`);
            
            if (!username || !issueCommentId) {
              console.log('Missing username or issueCommentId');
              process.exit(1); // Exit with error if username or issueCommentId is missing
            }
            
            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignee: username,
              state: 'open'
            });
            
            const issueCount = issues.length;
            const issueCountMessage = `@${username} has ${issueCount} open issues assigned.`;
            
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: issueCountMessage,
              in_reply_to: parseInt(issueCommentId)
            });
