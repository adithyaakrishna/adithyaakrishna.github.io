{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["StyledTagsContainer","styled","main","theme","mixins","inlineLink","flexBetween","TagTemplate","pageContext","data","location","tag","edges","allMarkdownRemark","title","className","to","map","node","frontmatter","slug","date","tags","key","Date","toLocaleDateString","year","month","day","length","i","kebabCase","pageQuery"],"mappings":"4FAAA,+IAQMA,EAAsBC,IAAOC,KAAV,+EAAGD,CAAH,kQAInB,qBAAGE,MAAkBC,OAAOC,cAI5B,qBAAGF,MAAkBC,OAAOE,eAsFnBC,UAvDK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChCC,EAAQH,EAARG,IACAC,EAAUH,EAAKI,kBAAfD,MAER,OACE,kBAAC,IAAD,CAAQF,SAAUA,GAChB,kBAAC,IAAD,CAAQI,MAAK,YAAcH,IAE3B,kBAACX,EAAD,KACE,0BAAMe,UAAU,cACd,0BAAMA,UAAU,SAAhB,KACA,kBAAC,OAAD,CAAMC,GAAG,aAAT,iBAGF,4BACE,kCAAQL,GACR,8BACE,kBAAC,OAAD,CAAMK,GAAG,kBAAT,mBAIJ,wBAAID,UAAU,cACXH,EAAMK,KAAI,YAAe,IAAD,IAAXC,KAC6BC,YAAjCL,EADe,EACfA,MAAOM,EADQ,EACRA,KAAMC,EADE,EACFA,KAAMC,EADJ,EACIA,KAC3B,OACE,wBAAIC,IAAKH,GACP,4BACE,kBAAC,OAAD,CAAMJ,GAAII,GAAON,IAEnB,uBAAGC,UAAU,YACX,8BACG,IAAIS,KAAKH,GAAMI,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,aAGT,qCACCN,GACCA,EAAKO,OAAS,GACdP,EAAKL,KAAI,SAACN,EAAKmB,GAAN,OACP,kBAAC,OAAD,CAAMP,IAAKO,EAAGd,GAAE,kBAAoBe,IAAUpB,GAA9B,IAAuCI,UAAU,OAAjE,IACIJ,eAoCnB,IAAMqB,EAAS","file":"component---src-templates-tag-js-1ecc281f328ad6d06308.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { Layout } from '@components';\r\n\r\nconst StyledTagsContainer = styled.main`\r\n  max-width: 1000px;\r\n\r\n  a {\r\n    ${({ theme }) => theme.mixins.inlineLink};\r\n  }\r\n\r\n  h1 {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    margin-bottom: 50px;\r\n\r\n    a {\r\n      font-size: var(--fz-lg);\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    li {\r\n      font-size: 24px;\r\n      h2 {\r\n        font-size: inherit;\r\n        margin: 0;\r\n        a {\r\n          color: var(--light-slate);\r\n        }\r\n      }\r\n      .subtitle {\r\n        color: var(--slate);\r\n        font-size: var(--fz-sm);\r\n\r\n        .tag {\r\n          margin-right: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagTemplate = ({ pageContext, data, location }) => {\r\n  const { tag } = pageContext;\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet title={`Tagged: #${tag}`} />\r\n\r\n      <StyledTagsContainer>\r\n        <span className=\"breadcrumb\">\r\n          <span className=\"arrow\">&larr;</span>\r\n          <Link to=\"/pensieve\">All memories</Link>\r\n        </span>\r\n\r\n        <h1>\r\n          <span>#{tag}</span>\r\n          <span>\r\n            <Link to=\"/pensieve/tags\">View all tags</Link>\r\n          </span>\r\n        </h1>\r\n\r\n        <ul className=\"fancy-list\">\r\n          {edges.map(({ node }) => {\r\n            const { title, slug, date, tags } = node.frontmatter;\r\n            return (\r\n              <li key={slug}>\r\n                <h2>\r\n                  <Link to={slug}>{title}</Link>\r\n                </h2>\r\n                <p className=\"subtitle\">\r\n                  <time>\r\n                    {new Date(date).toLocaleDateString('en-US', {\r\n                      year: 'numeric',\r\n                      month: 'long',\r\n                      day: 'numeric',\r\n                    })}\r\n                  </time>\r\n                  <span>&nbsp;&mdash;&nbsp;</span>\r\n                  {tags &&\r\n                    tags.length > 0 &&\r\n                    tags.map((tag, i) => (\r\n                      <Link key={i} to={`/pensieve/tags/${kebabCase(tag)}/`} className=\"tag\">\r\n                        #{tag}\r\n                      </Link>\r\n                    ))}\r\n                </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </StyledTagsContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TagTemplate;\r\n\r\nTagTemplate.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            date\r\n            slug\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}